#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>
#include "Adafruit_SHT31.h"

Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver();
Adafruit_SHT31 sht31 = Adafruit_SHT31();

#define SERVOMIN  130
#define SERVOMAX  600

#define SERVO1_CHANNEL 0

unsigned long previousSensorMillis = 0;
unsigned long startTime = 0;

const unsigned long sensorInterval = 1010;

int currentAngleServo1 = 0;

void setup() {
  Serial.begin(9600);
  Wire.begin();

  pwm.begin();
  pwm.setPWMFreq(50);
  delay(10);

  if (!sht31.begin(0x44)) {
    Serial.println("SHT31 bulunamadi! Kapaklar aciliyor (GUVENLIK MODU)");
    moveServo(SERVO1_CHANNEL, 100);  // Servo açılır
    while (1) delay(1000);  // Kalıcı güvenlik durumu (sadece setup'ta)
  }

  moveServo(SERVO1_CHANNEL, 0);
  startTime = millis();
}

void loop() {
  unsigned long currentMillis = millis();

  if (currentMillis - previousSensorMillis >= sensorInterval) {
    previousSensorMillis = currentMillis;

    float humidity = sht31.readHumidity();
    float temperature = sht31.readTemperature();

    if (!isnan(humidity) && !isnan(temperature)) {
      float expPart = exp((17.67 * temperature) / (temperature + 243.5));
      float absoluteHumidity = (6.112 * expPart * humidity * 2.1674) / (273.15 + temperature);

      Serial.print("Sicaklik: ");
      Serial.print(temperature);
      Serial.print(" *C, Nem: ");
      Serial.print(humidity);
      Serial.print(" %, Mutlak Nem: ");
      Serial.print(absoluteHumidity);
      Serial.println(" g/m3");

      float ahOpenThreshold = 1000;
      float ahCloseThreshold = -1;

      unsigned long elapsed = (currentMillis - startTime) / 1000;

      if (elapsed < 180) {
        ahOpenThreshold = 1000;
        ahCloseThreshold = -1;
      } else if (elapsed < 900) {
        ahOpenThreshold = 49.0;
        ahCloseThreshold = 37.0;
      } else if (elapsed < 1800) {
        ahOpenThreshold = 45.0;
        ahCloseThreshold = 34.0;
      } else if (elapsed < 2700) {
        ahOpenThreshold = 42.0;
        ahCloseThreshold = 33.0;
      } else if (elapsed < 3600) {
        ahOpenThreshold = -1;
        ahCloseThreshold = 1000;
      }

      if (absoluteHumidity > ahOpenThreshold && currentAngleServo1 != 100) {
        moveServo(SERVO1_CHANNEL, 100);
        currentAngleServo1 = 100;
        Serial.println("Servo1 ACILDI.");
      } else if (absoluteHumidity < ahCloseThreshold && currentAngleServo1 != 0) {
        moveServo(SERVO1_CHANNEL, 0);
        currentAngleServo1 = 0;
        Serial.println("Servo1 KAPANDI.");
      }

    } else {
      // Sensor verisi alınamadıysa servo açılır
      Serial.println("Sensor verisi okunamadi! Servo GUVENLIK modunda ACILDI.");
      if (currentAngleServo1 != 100) {
        moveServo(SERVO1_CHANNEL, 100);
        currentAngleServo1 = 100;
      }
    }
  }

  delay(10); 
}

int angleToPulse(int angle) {
  return map(angle, 0, 180, SERVOMIN, SERVOMAX);
}

void moveServo(int channel, int angle) {
  pwm.setPWM(channel, 0, angleToPulse(angle));
}
